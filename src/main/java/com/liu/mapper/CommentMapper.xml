<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.liu.dao.CommentDao">
    <resultMap id="CommentResultMap" type="Comment">
        <id column="comment_id" property="commentId" jdbcType="INTEGER"/>
        <result column="comment_pid" property="commentPid" jdbcType="INTEGER"/>
        <result column="comment_pname" property="commentPname" jdbcType="VARCHAR"/>
        <result column="comment_article_id" property="commentArticleId" jdbcType="INTEGER"/>
        <result column="comment_author_name" property="commentAuthorName" jdbcType="VARCHAR"/>
        <result column="comment_author_email" property="commentAuthorEmail" jdbcType="VARCHAR"/>
        <result column="comment_like_count" property="commentLikeCount" jdbcType="INTEGER"/>
        <result column="comment_avatar_path" property="commentAvatarPath" jdbcType="VARCHAR"/>
        <result column="comment_content" property="commentContent" jdbcType="VARCHAR"/>
        <result column="comment_ip" property="commentIp" jdbcType="VARCHAR"/>
        <result column="comment_create_time" property="commentCreateTime" jdbcType="TIMESTAMP"/>
        <result column="comment_role" property="commentRole" jdbcType="INTEGER"/>
         <association property="article" column="comment_article_id" select="com.liu.dao.ArticleDao.getArticleByAid"></association>
    </resultMap>

    <sql id="tb">comment</sql>

    <sql id="Base_Column_List">
    comment_id, comment_pid, comment_pname, comment_article_id, comment_author_name,
    comment_author_email, comment_like_count,comment_avatar_path, comment_content, 
     comment_ip,comment_create_time, comment_role
  </sql>
<!--   根据角色显示所有评论 -->
    <select id="listComment" parameterType="java.lang.Integer" resultMap="CommentResultMap" >
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="tb"/>
        where comment_role=#{role}
        ORDER BY comment_id desc
    </select>
    
<!--     根据Map获取最近评论数 -->
        <select id="listRecentComment" parameterType="Map" resultMap="CommentResultMap" >
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="tb"/>
        where comment_role=0
        ORDER BY comment_id desc
         <if test="start!=null and pageSize!=null">
		 	limit #{start},#{pageSize}
		 </if>
    </select>
    
<!--     获取评论下子评论 -->
      <select id="getChildComment" parameterType="java.lang.Integer" resultMap="CommentResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        <include refid="tb"/>
        WHERE
        comment_pid=#{commentId}
    </select>

<!--   	根据文章获取评论 -->
    <select id="getCommentByAid" resultMap="CommentResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="tb"/>
        where comment_article_id = #{commentArticleId,jdbcType=INTEGER} AND comment_role=0
        GROUP BY comment_id desc
    </select>
    
<!--     根据Id获取评论 -->
    <select id="getCommentByid" resultMap="CommentResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="tb"/>
        where comment_id = #{commentId,jdbcType=INTEGER}
    </select>
    
<!--     获取评论内容 -->
        <select id="getContentByCid" resultType="java.lang.String" parameterType="java.lang.Integer">
        select
        comment_content
        from
        <include refid="tb"/>
        where comment_id = #{commentId,jdbcType=INTEGER}
    </select>
    
<!--     根据评论Id删除评论 -->
    <delete id="deleteCommentByCid" parameterType="java.lang.Integer">
        delete from
        <include refid="tb"/>
        where comment_id = #{commentId,jdbcType=INTEGER}
    </delete>
	
<!-- 	删除文章下的所有评论 -->
	    <delete id="deleteCommentByAid" parameterType="java.lang.Integer">
        delete from
        <include refid="tb"/>
        where comment_article_id = #{commentArticleId,jdbcType=INTEGER}
    </delete>
	
<!-- 	插入评论 -->
    <insert id="insertComment" parameterType="Comment" useGeneratedKeys="true" keyProperty="commentId">
        insert into
        <include refid="tb"/>
        (comment_pid, comment_pname, comment_article_id,
        comment_author_name, comment_author_email,
        comment_like_count,comment_avatar_path, comment_content, 
        comment_ip, comment_create_time, comment_role)
        values (#{commentPid,jdbcType=INTEGER}, #{commentPname,jdbcType=VARCHAR}, #{commentArticleId,jdbcType=INTEGER},
        #{commentAuthorName,jdbcType=VARCHAR}, #{commentAuthorEmail,jdbcType=VARCHAR},
		#{commentLikeCount,jdbcType=INTEGER},#{commentAvatarPath}, #{commentContent,jdbcType=VARCHAR},
        #{commentIp,jdbcType=VARCHAR}, #{commentCreateTime,jdbcType=TIMESTAMP}, #{commentRole,jdbcType=INTEGER})
    </insert>
    
<!--     修改评论喜欢数 -->
		<update id="updateLike" parameterType="Comment">
		 update
        <include refid="tb"/>
        <set>
         <if test="commentLikeCount != null">comment_like_count = #{commentLikeCount,jdbcType=INTEGER},</if>
        </set>
        where comment_id=#{commentId,jdbcType=INTEGER}
		</update>
		
<!-- 		修改我的评论 -->
		<update id="updateMyContent" parameterType="Comment">
		 update
        <include refid="tb"/>
        <set>
         <if test="commentContent != null">comment_content	 = #{commentContent,jdbcType=VARCHAR},</if>
        </set>
        where comment_id=#{commentId,jdbcType=INTEGER}
		</update>
</mapper>